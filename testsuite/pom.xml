<?xml version="1.0" encoding="UTF-8"?>
<project xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd" xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">

    <modelVersion>4.0.0</modelVersion>

    <groupId>io.strimzi.oauth.testsuite</groupId>
    <artifactId>kafka-oauth-testsuite</artifactId>
    <version>0.15.1</version>

    <packaging>pom</packaging>

    <modules>
        <module>common</module>
        <module>mock-oauth-server</module>
        <module>docker</module>
        <module>mockoauth-tests</module>
        <module>keycloak-auth-tests</module>
        <module>keycloak-authz-tests</module>
        <module>keycloak-authz-kraft-tests</module>
        <module>keycloak-authz-zk-tests</module>
        <module>keycloak-errors-tests</module>
        <module>hydra-test</module>
    </modules>

    <licenses>
        <license>
            <name>Apache License, Version 2.0</name>
            <url>https://www.apache.org/licenses/LICENSE-2.0.txt</url>
        </license>
    </licenses>

    <properties>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <maven.compiler.source>1.8</maven.compiler.source>
        <maven.compiler.target>1.8</maven.compiler.target>
        <maven.compiler.version>3.8.1</maven.compiler.version>
        <maven.resources.version>3.1.0</maven.resources.version>
        <maven.dependency.version>3.1.1</maven.dependency.version>
        <maven.checkstyle.version>3.1.0</maven.checkstyle.version>
        <maven.surefire.version>2.22.1</maven.surefire.version>
        <fabric8-docker-plugin.version>0.40.2</fabric8-docker-plugin.version>

        <testcontainers.version>1.19.6</testcontainers.version>
        <version.junit>4.13.2</version.junit>
        <spotbugs.version>4.7.0</spotbugs.version>
        <jackson.annotation.version>2.15.2</jackson.annotation.version>
        <strimzi-oauth.version>0.15.1</strimzi-oauth.version>
        <checkstyle.dir>..</checkstyle.dir>

        <kafka.docker.image>quay.io/strimzi/kafka:0.39.0-kafka-3.6.1</kafka.docker.image>
    </properties>

    <dependencyManagement>
        <dependencies>
            <dependency>
                <groupId>io.strimzi</groupId>
                <artifactId>oauth</artifactId>
                <version>${strimzi-oauth.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>
            <dependency>
                <groupId>io.strimzi.oauth.testsuite</groupId>
                <artifactId>common</artifactId>
                <version>${project.version}</version>
            </dependency>
            <dependency>
                <groupId>io.strimzi.oauth.testsuite</groupId>
                <artifactId>keycloak-authz-tests</artifactId>
                <version>${project.version}</version>
            </dependency>
            <dependency>
                <groupId>org.testcontainers</groupId>
                <artifactId>testcontainers-bom</artifactId>
                <version>${testcontainers.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>
            <dependency>
                <groupId>com.fasterxml.jackson.core</groupId>
                <artifactId>jackson-annotations</artifactId>
                <version>${jackson.annotation.version}</version>
            </dependency>
            <dependency>
                <groupId>junit</groupId>
                <artifactId>junit</artifactId>
                <version>${version.junit}</version>
            </dependency>
            <dependency>
                <groupId>com.github.spotbugs</groupId>
                <artifactId>spotbugs-annotations</artifactId>
                <version>${spotbugs.version}</version>
            </dependency>
        </dependencies>
    </dependencyManagement>

    <build>
        <pluginManagement>
            <plugins>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-compiler-plugin</artifactId>
                    <version>${maven.compiler.version}</version>
                    <executions>
                        <execution>
                            <id>default-compile</id>
                            <phase>compile</phase>
                            <goals>
                                <goal>compile</goal>
                            </goals>
                            <configuration>
                                <compilerArgs>
                                    <arg>-Xlint:unchecked,deprecation</arg>
                                    <arg>-Werror</arg>
                                </compilerArgs>
                            </configuration>
                        </execution>
                    </executions>
                </plugin>
                <plugin>
                    <groupId>io.fabric8</groupId>
                    <artifactId>docker-maven-plugin</artifactId>
                    <version>${fabric8-docker-plugin.version}</version>
                </plugin>
            </plugins>
        </pluginManagement>
        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-resources-plugin</artifactId>
                <version>${maven.resources.version}</version>
                <executions>
                    <execution>
                        <id>copy-kafka-example-truststore</id>
                        <phase>install</phase>
                        <goals>
                            <goal>copy-resources</goal>
                        </goals>
                        <configuration>
                            <outputDirectory>target/kafka/certs</outputDirectory>
                            <resources>
                                <resource>
                                    <directory>${basedir}/../examples/docker/certificates</directory>
                                    <includes>
                                        <include>ca-truststore.p12</include>
                                    </includes>
                                    <filtering>false</filtering>
                                </resource>
                            </resources>
                        </configuration>
                    </execution>
                    <execution>
                        <id>copy-keycloak-example-keystore</id>
                        <phase>install</phase>
                        <goals>
                            <goal>copy-resources</goal>
                        </goals>
                        <configuration>
                            <outputDirectory>target/keycloak/certs</outputDirectory>
                            <resources>
                                <resource>
                                    <directory>${basedir}/../examples/docker/keycloak/certificates</directory>
                                    <includes>
                                        <include>keycloak.server.keystore.p12</include>
                                    </includes>
                                    <filtering>false</filtering>
                                </resource>
                            </resources>
                        </configuration>
                    </execution>
                    <execution>
                        <id>copy-mockoauth-keystore</id>
                        <phase>install</phase>
                        <goals>
                            <goal>copy-resources</goal>
                        </goals>
                        <configuration>
                            <outputDirectory>target/mockoauth/certs</outputDirectory>
                            <resources>
                                <resource>
                                    <directory>${basedir}/../examples/docker/keycloak/certificates</directory>
                                    <includes>
                                        <include>keycloak.server.keystore.p12</include>
                                    </includes>
                                    <filtering>false</filtering>
                                </resource>
                            </resources>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-dependency-plugin</artifactId>
                <version>${maven.dependency.version}</version>
                <executions>
                    <execution>
                        <id>copy</id>
                        <phase>install</phase>
                        <goals>
                            <goal>copy</goal>
                        </goals>
                    </execution>
                </executions>
                <configuration>
                    <artifactItems>
                        <artifactItem>
                            <groupId>io.strimzi</groupId>
                            <artifactId>kafka-oauth-client</artifactId>
                        </artifactItem>
                        <artifactItem>
                            <groupId>io.strimzi</groupId>
                            <artifactId>kafka-oauth-server</artifactId>
                        </artifactItem>
                        <artifactItem>
                            <groupId>io.strimzi</groupId>
                            <artifactId>kafka-oauth-server-plain</artifactId>
                        </artifactItem>
                        <artifactItem>
                            <groupId>io.strimzi</groupId>
                            <artifactId>kafka-oauth-common</artifactId>
                        </artifactItem>
                        <artifactItem>
                            <groupId>com.nimbusds</groupId>
                            <artifactId>nimbus-jose-jwt</artifactId>
                        </artifactItem>
                    </artifactItems>
                    <outputDirectory>target/kafka/libs</outputDirectory>
                    <overWriteReleases>false</overWriteReleases>
                    <overWriteSnapshots>true</overWriteSnapshots>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-checkstyle-plugin</artifactId>
                <version>${maven.checkstyle.version}</version>
                <dependencies>
                    <dependency>
                        <groupId>com.puppycrawl.tools</groupId>
                        <artifactId>checkstyle</artifactId>
                        <version>8.29</version>
                    </dependency>
                </dependencies>
                <executions>
                    <execution>
                        <id>validate</id>
                        <phase>validate</phase>
                        <configuration>
                            <configLocation>${checkstyle.dir}/.checkstyle/checkstyle.xml</configLocation>
                            <headerLocation>${checkstyle.dir}/.checkstyle/java.header</headerLocation>
                            <suppressionsLocation>${checkstyle.dir}/.checkstyle/suppressions.xml</suppressionsLocation>
                            <includeTestSourceDirectory>true</includeTestSourceDirectory>
                            <encoding>UTF-8</encoding>
                            <consoleOutput>true</consoleOutput>
                            <failsOnError>true</failsOnError>
                        </configuration>
                        <goals>
                            <goal>check</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>com.github.spotbugs</groupId>
                <artifactId>spotbugs-maven-plugin</artifactId>
                <version>4.6.0.0</version>
                <dependencies>
                    <!-- overwrite dependency on spotbugs if you want to specify the version of˓→spotbugs -->
                    <dependency>
                        <groupId>com.github.spotbugs</groupId>
                        <artifactId>spotbugs</artifactId>
                        <version>${spotbugs.version}</version>
                    </dependency>
                </dependencies>
                <configuration>
                    <effort>Max</effort>
                    <!-- Reports all bugs (other values are medium and max) -->
                    <threshold>Low</threshold>
                    <!-- Produces XML report -->
                    <xmlOutput>true</xmlOutput>
                    <!-- Configures the directory in which the XML report is created -->
                    <spotbugsXmlOutputDirectory>${project.build.directory}/spotbugs</spotbugsXmlOutputDirectory>
                    <!-- Configures the file for excluding warnings -->
                    <excludeFilterFile>${checkstyle.dir}/.spotbugs/spotbugs-exclude.xml</excludeFilterFile>
                </configuration>
            </plugin>
            <plugin>
                <artifactId>maven-surefire-plugin</artifactId>
                <version>${maven.surefire.version}</version>
                <configuration>
                    <systemPropertyVariables>
                        <KAFKA_DOCKER_IMAGE>${kafka.docker.image}</KAFKA_DOCKER_IMAGE>
                    </systemPropertyVariables>
                    <argLine>-Djava.security.krb5.conf=${project.basedir}/../docker/kerberos/krb5.conf</argLine>
                </configuration>

            </plugin>
        </plugins>
    </build>

    <profiles>
        <profile>
            <id>kafka-2_3_1</id>
            <properties>
                <!-- Uses JDK 1.8.0 -->
                <kafka.docker.image>quay.io/strimzi/kafka:0.17.0-kafka-2.3.1</kafka.docker.image>
            </properties>
        </profile>
        <profile>
            <id>kafka-2_4_0</id>
            <properties>
                <!-- Uses JDK 11.0.x -->
                <kafka.docker.image>quay.io/strimzi/kafka:0.19.0-kafka-2.4.0</kafka.docker.image>
            </properties>
        </profile>
        <profile>
            <id>kafka-2_4_1</id>
            <properties>
                <!-- Uses JDK 11.0.x -->
                <kafka.docker.image>quay.io/strimzi/kafka:0.19.0-kafka-2.4.1</kafka.docker.image>
            </properties>
        </profile>
        <profile>
            <id>kafka-2_5_0</id>
            <properties>
                <!-- Uses JDK 11.0.x -->
                <kafka.docker.image>quay.io/strimzi/kafka:0.22.1-kafka-2.5.0</kafka.docker.image>
            </properties>
        </profile>
        <profile>
            <id>kafka-2_5_1</id>
            <properties>
                <!-- Uses JDK 11.0.x -->
                <kafka.docker.image>quay.io/strimzi/kafka:0.22.1-kafka-2.5.1</kafka.docker.image>
            </properties>
        </profile>
        <profile>
            <id>kafka-2_6_0</id>
            <properties>
                <!-- Uses JDK 11.0.x -->
                <kafka.docker.image>quay.io/strimzi/kafka:0.23.0-kafka-2.6.0</kafka.docker.image>
            </properties>
        </profile>
        <profile>
            <id>kafka-2_6_2</id>
            <properties>
                <!-- Uses JDK 11.0.x -->
                <kafka.docker.image>quay.io/strimzi/kafka:0.23.0-kafka-2.6.2</kafka.docker.image>
            </properties>
        </profile>
        <profile>
            <id>kafka-2_7_0</id>
            <properties>
                <!-- Uses JDK 11.0.x -->
                <kafka.docker.image>quay.io/strimzi/kafka:0.25.0-kafka-2.7.0</kafka.docker.image>
            </properties>
        </profile>
        <profile>
            <id>kafka-2_7_1</id>
            <properties>
                <!-- Uses JDK 11.0.x -->
                <kafka.docker.image>quay.io/strimzi/kafka:0.25.0-kafka-2.7.1</kafka.docker.image>
            </properties>
        </profile>
        <profile>
            <id>kafka-2_8_0</id>
            <properties>
                <!-- Uses JDK 11.0.x -->
                <kafka.docker.image>quay.io/strimzi/kafka:0.27.1-kafka-2.8.0</kafka.docker.image>
            </properties>
        </profile>
        <profile>
            <id>kafka-2_8_1</id>
            <properties>
                <!-- Uses JDK 11.0.x -->
                <kafka.docker.image>quay.io/strimzi/kafka:0.27.1-kafka-2.8.1</kafka.docker.image>
            </properties>
        </profile>
        <profile>
            <id>kafka-3_0_0</id>
            <properties>
                <!-- Uses JDK 11.0.x -->
                <kafka.docker.image>quay.io/strimzi/kafka:0.28.0-kafka-3.0.0</kafka.docker.image>
            </properties>
        </profile>
        <profile>
            <id>kafka-3_1_2</id>
            <properties>
                <!-- Uses JDK 11.0.x -->
                <kafka.docker.image>quay.io/strimzi/kafka:0.31.1-kafka-3.1.2</kafka.docker.image>
            </properties>
        </profile>
        <profile>
            <id>kafka-3_2_3</id>
            <properties>
                <!-- Uses JDK 17.0.x -->
                <kafka.docker.image>quay.io/strimzi/kafka:0.33.0-kafka-3.2.3</kafka.docker.image>
            </properties>
        </profile>
        <profile>
            <id>kafka-3_3_1</id>
            <properties>
                <!-- Uses JDK 17.0.x -->
                <kafka.docker.image>quay.io/strimzi/kafka:0.33.0-kafka-3.3.1</kafka.docker.image>
            </properties>
        </profile>
        <profile>
            <id>kafka-3_3_2</id>
            <properties>
                <!-- Uses JDK 17.0.x -->
                <kafka.docker.image>quay.io/strimzi/kafka:0.33.1-kafka-3.3.2</kafka.docker.image>
            </properties>
        </profile>
        <profile>
            <id>kafka-3_4_0</id>
            <properties>
                <!-- Uses JDK 17.0.x -->
                <kafka.docker.image>quay.io/strimzi/kafka:0.35.1-kafka-3.4.0</kafka.docker.image>
            </properties>
        </profile>
        <profile>
            <id>kafka-3_5_0</id>
            <properties>
                <!-- Uses JDK 17.0.x -->
                <kafka.docker.image>quay.io/strimzi/kafka:0.37.0-kafka-3.5.0</kafka.docker.image>
            </properties>
        </profile>
        <profile>
            <id>kafka-3_5_2</id>
            <properties>
                <!-- Uses JDK 17.0.x -->
                <kafka.docker.image>quay.io/strimzi/kafka:0.39.0-kafka-3.5.2</kafka.docker.image>
            </properties>
        </profile>
        <profile>
            <id>kafka-3_6_1</id>
            <properties>
                <!-- Uses JDK 17.0.x -->
                <kafka.docker.image>quay.io/strimzi/kafka:0.39.0-kafka-3.6.1</kafka.docker.image>
            </properties>
        </profile>
        <profile>
            <!--
                When using this profile you can use -Dkafka.docker.image=YOUR_IMAGE
            -->
            <id>custom</id>
        </profile>
        <profile>
            <id>java-11</id>
            <activation>
                <jdk>[11,17)</jdk>
            </activation>
            <properties>
                <maven.compiler.release>8</maven.compiler.release>
            </properties>
        </profile>
        <profile>
            <id>java-17</id>
            <activation>
                <jdk>[17,</jdk>
            </activation>
            <properties>
                <maven.compiler.release>8</maven.compiler.release>
            </properties>
        </profile>

    </profiles>
</project>
